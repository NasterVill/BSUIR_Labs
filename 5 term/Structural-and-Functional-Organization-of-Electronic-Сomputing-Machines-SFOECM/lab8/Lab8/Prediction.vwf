/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 3.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 3000.0;
	SIMULATION_TIME = 3000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("jmp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("count_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("current_state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("current_state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "current_state";
}

SIGNAL("current_state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "current_state";
}

SIGNAL("new_state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("new_state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "new_state";
}

SIGNAL("new_state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "new_state";
}

SIGNAL("PHT_shifter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PHT_shifter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PHT_shifter";
}

SIGNAL("PHT_shifter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PHT_shifter";
}

SIGNAL("PHT_shifter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PHT_shifter";
}

SIGNAL("PHT_shifter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PHT_shifter";
}

SIGNAL("prediction")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("step1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("step2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("step3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("step4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("step5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("step6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("step7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sclear")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 300;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("jmp")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 470.0;
	}
}

TRANSITION_LIST("count_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 445.0;
		LEVEL 0 FOR 275.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 335.0;
		LEVEL 1 FOR 65.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 485.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 155.0;
	}
}

TRANSITION_LIST("current_state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 485.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1760.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 195.0;
	}
}

TRANSITION_LIST("current_state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 405.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 115.0;
	}
}

TRANSITION_LIST("new_state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 445.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 175.0;
	}
}

TRANSITION_LIST("new_state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 155.0;
	}
}

TRANSITION_LIST("PHT_shifter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 305.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 215.0;
	}
}

TRANSITION_LIST("PHT_shifter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 295.0;
	}
}

TRANSITION_LIST("PHT_shifter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 375.0;
	}
}

TRANSITION_LIST("PHT_shifter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 455.0;
	}
}

TRANSITION_LIST("prediction")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 495.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1760.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 185.0;
	}
}

TRANSITION_LIST("step1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 37;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
	}
}

TRANSITION_LIST("step2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 37;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("step3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 37;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("step4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 37;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("step5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 36;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 65.0;
	}
}

TRANSITION_LIST("step6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		NODE
		{
			REPEAT = 36;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 55.0;
	}
}

TRANSITION_LIST("step7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		NODE
		{
			REPEAT = 36;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 45.0;
	}
}

TRANSITION_LIST("sclear")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 765.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 2185.0;
	}
}

TRANSITION_LIST("sset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1030.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 845.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 185.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "jmp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "current_state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "current_state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "current_state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "new_state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "new_state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "new_state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "PHT_shifter";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "PHT_shifter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "PHT_shifter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "PHT_shifter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "PHT_shifter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "prediction";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "step1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "step2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "step3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "step4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "step5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "step6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "step7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "count_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sclear";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 1050000;
	MASTER = TRUE;
}
;
